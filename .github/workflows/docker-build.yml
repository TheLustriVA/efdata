name: Docker Build Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # Run daily at 2 AM to catch external breaking changes
  schedule:
    - cron: '0 2 * * *'

jobs:
  docker-build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      run: |
        docker build -t efdata:test .
        
    - name: Test Docker Compose
      run: |
        cp .env.example .env
        docker compose config
        
    - name: Check for secrets in code
      run: |
        # Check for hardcoded passwords/keys
        if grep -r "PSQL_PW\|password\|api_key" --include="*.py" --exclude-dir=".venv" --exclude-dir=".git" . | grep -v "getenv\|environ\|example\|\.env"; then
          echo "WARNING: Possible hardcoded secrets found!"
          exit 1
        fi
        
  data-validation:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install dependencies
      run: |
        pip install requests scrapy
        
    - name: Test RBA endpoint
      run: |
        cat << 'EOF' > test_rba.py
        import requests
        import sys
        
        try:
            response = requests.get('https://api.rba.gov.au/statistics/tables', timeout=10)
            if response.status_code != 200:
                print(f'⚠️  WARNING: RBA API returned {response.status_code}')
                print('This may affect data collection but is not critical for the build')
                sys.exit(0)  # Don't fail the build for this
            print('✓ RBA API accessible')
        except requests.exceptions.ConnectTimeout:
            print('⚠️  WARNING: RBA API timed out - this is common from GitHub Actions')
            print('The API may block GitHub IP ranges or be temporarily unavailable')
            print('This will not affect your production deployment')
            sys.exit(0)  # Don't fail the build for this
        except Exception as e:
            print(f'⚠️  WARNING: RBA API check failed: {type(e).__name__}: {e}')
            print('This is not critical for the build')
            sys.exit(0)  # Don't fail the build for this
        EOF
        python test_rba.py
    
    - name: Check spider syntax
      run: |
        find src/econdata/econdata/spiders -name "*.py" -type f -exec python -m py_compile {} \;